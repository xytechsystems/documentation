/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var v=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var x=Object.prototype.hasOwnProperty;var k=(h,e)=>{for(var t in e)v(h,t,{get:e[t],enumerable:!0})},C=(h,e,t,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of y(e))!x.call(h,i)&&i!==t&&v(h,i,{get:()=>e[i],enumerable:!(a=D(e,i))||a.enumerable});return h};var I=h=>C(v({},"__esModule",{value:!0}),h);var T={};k(T,{default:()=>w});module.exports=I(T);var c={filename_index:"index",key_sort:"weight",fbk_weight_folder:-20,fbk_weight_index:-10,fbk_weight_md:0,fbk_weight_other:20,fbk_retitled:!1,all_features:!1},p={filename_index:{type:"text",name:"File name of index",desc:'Do not include the file extension, such as "index", "readme".'},heading_fm:{type:"heading",name:"Markdown Frontmatter",desc:"Setting Frontmatter keys and their default values."},key_sort:{type:"text",name:"Sort key",desc:'The key defined in the frontmatter and use its value as a weight to sort the ".md" files, eg: "weight", "order".'},fbk_weight_folder:{type:"text",name:"Default weight for folder",desc:"Fallback for folder, if it does not possess a child index, or the value in index is invalid. "},fbk_weight_index:{type:"text",name:"Fixed weight for index",desc:"Fixed value sharing by each index."},fbk_weight_md:{type:"text",name:"Default weight for markdown",desc:'Fallback for normal ".md" file.'},fbk_weight_other:{type:"text",name:"Fixed weight for unknown file",desc:'Fixed value for files except ".md".'},heading_add:{type:"heading",name:"Additional",desc:'Additional settings for users that using "mkdocs" with "mkdocs-nav-weight" as publisher.'},all_features:{type:"toggle",name:'Enable features for "mkdocs-nav-weight"',desc:"Enable all features."},fbk_retitled:{type:"toggle",name:'Default value for key "retitled"',desc:'Controlling the default behavior of folder naming, "ON" is "true", "OFF" is "false".'}};var g=require("obsidian");var u=require("obsidian");var _=["retitled","empty","headless"],o=class{static parseNumber(e){return/^[+-]?\d+(\.\d+)?$/.test(e)?parseFloat(e):null}static parseString(e){return/^[a-zA-Z_][a-zA-Z0-9_-]*$/.test(e)&&!_.includes(e)?e:null}static parseBoolean(e){let t=e==="true";return t||e==="false"?!!t:null}static parseStringData(e,t){switch(typeof t){case"number":return o.parseNumber(e);case"string":return o.parseString(e);default:return o.parseBoolean(e)}}static parseRawData(e,t){switch(typeof e){case"string":return o.parseStringData(e,t);case"number":return typeof t=="number"&&Number.isFinite(e)?e:null;case"boolean":return typeof t=="boolean"?e:null;case"undefined":return;default:return null}}};var b=class extends u.PluginSettingTab{constructor(t,a){super(t,a);this.plugin=a}hide(){this.modifiedConfig.all_features===!1&&this.cachedAllFeatures===!0&&(this.plugin.sorter.needCleanupIcons=!0),Object.keys(this.modifiedConfig).length!==0&&this.plugin.saveSettings(this.modifiedConfig,!1),super.hide()}display(){this.modifiedConfig={},this.cachedAllFeatures=this.plugin.userConfig.all_features;let{containerEl:t}=this;t.empty();let a=["filename_index","heading_fm","key_sort","fbk_weight_folder","fbk_weight_index","fbk_weight_md","fbk_weight_other","heading_add","all_features","fbk_retitled"];for(let i of a)switch(p[i].type){case"text":this.addTabText(t,i);break;case"toggle":this.addTabToggle(t,i);break;default:this.addTabHeading(t,i)}}addTabText(t,a){let i=p[a],s=this.plugin.userConfig[a],n=c[a];new u.Setting(t).setName(i.name).setDesc(i.desc).addText(r=>r.setPlaceholder(String(n)).setValue(String(s)).onChange(l=>{let d=o.parseStringData(l,n);d!==null&&(this.modifiedConfig[a]=d)}))}addTabToggle(t,a){let i=p[a],s=this.plugin.userConfig[a];new u.Setting(t).setName(i.name).setDesc(i.desc).addToggle(n=>n.setValue(s).onChange(r=>{this.modifiedConfig[a]=r}))}addTabHeading(t,a){let{name:i,desc:s}=p[a];new u.Setting(t).setHeading().setName(i).setDesc(s)}};var f=require("obsidian");var m=class{constructor(e,t,a){this.inSorting=!1;this.sorter=e,this.plugin=t,this.fileExplorerView=a,this.patchOriginal()}patchOriginal(){try{this.originalFunc=this.fileExplorerView.getSortedFolderItems,this.boundOriginalFunc=this.originalFunc.bind(this.fileExplorerView);let e=this.getSortedFolderItemsPatched.bind(this);this.boundPatchedFunc=e,this.fileExplorerView.getSortedFolderItems=e}catch(e){let t=`Patching failed.
Original function not found.
Please manually restart Obsidian to retry or disable this plugin.`;throw this.plugin.setStatusBar(t,"!"),e}}unPatch(){if(this.originalFunc!=null){if(this.fileExplorerView.getSortedFolderItems!==this.boundPatchedFunc){let e=`Unpatch failed.
May another plugin patched same function.
Please manually restart Obsidian to cleanup.`;this.plugin.setStatusBar(e,"!");return}this.fileExplorerView.getSortedFolderItems=this.originalFunc}}getSortedFolderItemsPatched(e){let t=this.sorter;if(!this.inSorting){this.inSorting=!0;try{t.prepareSorting()}catch(i){let s=`Error in preparing sorting caches:
${i}`;throw this.plugin.setStatusBar(s,"!"),i}}let a;try{t.isOn?a=t.getItemsAndSetIcons(e,this.boundOriginalFunc(e)):a=this.boundOriginalFunc(e)}catch(i){let s=`Error in sorting:
${i}`;throw this.plugin.setStatusBar(s,"!"),i}return e.isRoot()&&(this.inSorting=!1,t.needCleanupIcons=!1),a}};var F=class{constructor(e,t){this.fileExplorerView=e,this.plugin=t,this.metadataCache=t.app.metadataCache,this.patcher=new m(this,t,e),this.isOn=!0,this.inCaching=!1,this.needCleanupIcons=!1,this.fmDataInVault={},this.logger=[]}async updateParsingCaches(){let e=this.plugin.userConfig,t=e.all_features;this.allFeatures=t,t?(this.folderFmData={weight:e.fbk_weight_folder,headless:!1,retitled:!1},this.parentFmData={weight:e.fbk_weight_folder,headless:!1,empty:!1,retitled:e.fbk_retitled},this.indexFmData={weight:e.fbk_weight_index,headless:!1},this.markdownFmData={weight:e.fbk_weight_md,headless:!1},this.otherFmData={weight:e.fbk_weight_other,headless:!1}):(this.folderFmData={weight:e.fbk_weight_folder},this.parentFmData={weight:e.fbk_weight_folder},this.indexFmData={weight:e.fbk_weight_index},this.markdownFmData={weight:e.fbk_weight_md},this.otherFmData={weight:e.fbk_weight_other}),this.indexParsingKeys={weight:e.key_sort,headless:"headless",empty:"empty",retitled:"retitled"},this.markdownParsingKeys={weight:e.key_sort,headless:"headless"},this.indexFilename=e.filename_index+".md"}sortAll(){this.fileExplorerView.sort()}prepareSorting(){let e=this.fileExplorerView;this.inCaching=!0;let t=e.app.vault,a=Object.assign({},e.fileItems),i=[];this.fmDataInVault={},this.logger=[];let s=t.getRoot();this.fmDataInVault[s.path]={},Object.keys(a).forEach(l=>{let d=a[l];d.vChildren&&d.file instanceof f.TFolder&&(i.push(d),this.fmDataInVault[l]={})}),this.cacheFmDataInFolder(s);for(let l of i)this.cacheFmDataInFolder(l.file);let r=this.logger.length;r===0?this.plugin.setStatusBar("all sorted","v"):(r>4&&(this.logger=this.logger.slice(0,4),this.logger.push(`...
${r-4} more
...`)),this.plugin.setStatusBar(this.logger.join(`
`),"x")),this.inCaching=!1}cacheFmDataInFolder(e){let t=this.fmDataInVault[e.path];for(let a of e.children)t[a.path]===void 0&&(t[a.path]=this.getFmDataAbsFile(a))}getFmDataAbsFile(e){return e instanceof f.TFolder?this.folderFmData:e instanceof f.TFile?this.getFmDataFile(e,this.metadataCache.getFileCache(e)):this.otherFmData}getFmDataFile(e,t){if(e.extension!=="md")return this.otherFmData;let a=t==null?void 0:t.frontmatter;return e.name===this.indexFilename?this.getFmDataIndex(e,a):a===void 0?Object.assign({},this.markdownFmData):this.getValidFmData(e.path,this.parseMarkdown(a),this.markdownFmData)}getFmDataIndex(e,t){let a=e.parent,i=t===void 0?Object.assign({},this.parentFmData):this.getValidFmData(e.path,this.parseIndex(t),this.parentFmData);if(a!=null&&a.parent)if(this.inCaching)this.fmDataInVault[a.parent.path][a.path]=i;else return i;let s={headless:i.empty};return Object.assign({},this.indexFmData,s)}getValidFmData(e,t,a){return Object.keys(a).forEach(s=>{let n=a[s],r=o.parseRawData(t[s],n);r===void 0?t[s]=n:r===null&&(this.inCaching&&this.catchLog(e,s,n),t[s]=n)}),t}parseIndex(e){let t=this.indexParsingKeys;return this.allFeatures?{weight:e[t.weight],headless:e[t.headless],empty:e[t.empty],retitled:e[t.retitled]}:{weight:e[t.weight]}}parseMarkdown(e){let t=this.markdownParsingKeys;return this.allFeatures?{weight:e[t.weight],headless:e[t.headless]}:{weight:e[t.weight]}}getItemsAndSetIcons(e,t){let a=this.fmDataInVault[e.path],i=this.needCleanupIcons,s=this.allFeatures;return t.map((n,r)=>({index:r,weight:a[n.file.path].weight,item:n})).sort((n,r)=>{let l=n.weight-r.weight;return Math.abs(l)<1e-5?n.index-r.index:l}).map(({item:n})=>{let r,l,d=n.file;if(i)r=!1,l=!1;else if(s)r=a[d.path].headless,l=a[d.path].retitled;else return n;return this.setNavItemIcon(n,"leaf","nvt-headless",r),d instanceof f.TFolder&&this.setNavItemIcon(n,"text-cursor-input","nvt-retitled",l),n})}setNavItemIcon(e,t,a,i){let s=e.selfEl;if(!s)return;let n=s.getElementsByClassName(a)[0];i!==(n!==void 0)&&(i?(0,f.setIcon)(s.createDiv({cls:["nav-file-tag",a]}),t):n.remove())}catchLog(e,t,a){this.logger.length<4?this.logger.push(`/${e}
${t}  =>  ${a}`):this.logger.push("")}OnMetadataCacheChanged(e,t,a){var n,r;let i=e.parent;if(!i)return;let s=e.name===this.indexFilename&&i.parent?(n=this.fmDataInVault[i.parent.path])==null?void 0:n[i.path]:(r=this.fmDataInVault[i.path])==null?void 0:r[e.path];s!==void 0&&(this.getIsEqual(this.getFmDataFile(e,a),s)||this.sortAll())}getIsEqual(e,t){let a=Object.keys(e),i=Object.keys(t);if(a.length!==i.length)return!1;for(let s of a)if(e[s]!==t[s])return!1;return!0}};var w=class extends g.Plugin{async onload(){await this.loadSettings(),this.app.workspace.onLayoutReady(async()=>{this.statusBarEl=this.addStatusBarItem(),this.statusBarSpan=this.statusBarEl.createSpan({cls:"status-bar-item-icon"});let t=this.app.workspace.getLeavesOfType("file-explorer")[0];if(!t){this.setStatusBar("error: can not find file explorer leaf","!");return}this.sorter=new F(t.view,this),this.sorter.updateParsingCaches(),this.sorter.sortAll(),this.ribbonIcon=this.addRibbonIcon("arrow-down-01","Nav Weight: click to disable",()=>{this.toggleEnable()}),this.addCommand({id:"nvt-toggle-enable",name:"Nav Weight: Enable/Disable",callback:this.toggleEnable.bind(this)}),this.addSettingTab(new b(this.app,this)),this.registerEvent(this.app.metadataCache.on("changed",this.sorter.OnMetadataCacheChanged,this.sorter))})}onunload(){this.sorter.needCleanupIcons=!0,this.sorter.sortAll(),this.sorter.patcher.unPatch(),this.sorter.sortAll()}toggleEnable(){let t=this.sorter.isOn;t?(this.sorter.needCleanupIcons=!0,(0,g.setTooltip)(this.ribbonIcon,"Nav Weight: click to enable"),this.ribbonIcon.classList.add("nvt-ribbon-disable")):((0,g.setTooltip)(this.ribbonIcon,"Nav Weight: click to disable"),this.ribbonIcon.classList.remove("nvt-ribbon-disable")),this.sorter.sortAll(),this.sorter.isOn=!t,this.sorter.sortAll()}async loadSettings(){this.settingKeys=Object.keys(c);let t=Object.assign({},await this.loadData()),a={};this.settingKeys.forEach(i=>{var n;let s=c[i];a[i]=(n=o.parseRawData(t[i],s))!=null?n:s}),await this.saveSettings(a,!0)}async saveSettings(t,a){a?this.userConfig=Object.assign({},c,t):(this.userConfig=Object.assign({},this.userConfig,t),this.sorter.updateParsingCaches(),this.sorter.sortAll()),await this.saveData(this.userConfig)}setStatusBar(t,a){let i=`Nav Weight
${t}`,s;switch(a){case"v":s="file-check";break;case"x":s="file-x";break;default:s="file-warning",new g.Notice(i,5e3)}(0,g.setIcon)(this.statusBarSpan,s),(0,g.setTooltip)(this.statusBarEl,i,{placement:"top"})}};

/* nosourcemap */